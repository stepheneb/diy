<VirtualHost *:80 *:8080 *:443>
  ### Basic Configuration ###
  PassengerEnabled on

  ServerAdmin webmaster@concord.org
  <% dns_prefix = (version == "staging" ? "staging" : "diy") %>
  ServerName <%= application %>.<%= dns_prefix %>.concord.org
  
  DocumentRoot /web/<%= version %>/<%= application %>/current/public

  ### Logging Configuration ###

  ErrorLog /var/log/httpd/<%= application %>.<%= dns_prefix %>.concord.org-error_log
  CustomLog /var/log/httpd/<%= application %>.<%= dns_prefix %>.concord.org-access_log combined
  CustomLog "|/usr/bin/logger -p local2.info -t <%= application %>.<%= dns_prefix %>.concord.org" combined

  ### ModRewrite Configuration ###

  RewriteEngine On
        
  # Should perhaps use modrewrite to fix the www issue instead of the vhost below
  RewriteCond %{HTTP_HOST} ^www\\.<%= application %>\\.<%= dns_prefix %>\\.concord\\.org$ [NC]
  RewriteRule ^(.*)$ http://<%= application %>.<%= dns_prefix %>.concord.org/$1 [R=301,L]

  # Uncomment for rewrite debugging
  #RewriteLog logs/myapp_rewrite_log
  #RewriteLogLevel 9

  # Check for maintenance file and redirect all requests
  # ( this is for use with Capistrano's disable_web task )
  RewriteCond %{DOCUMENT_ROOT}/system/maintenance.html -f
  RewriteCond %{SCRIPT_FILENAME} !maintenance.html
  RewriteRule ^.*$ /system/maintenance.html [L]

  # Rewrite index to check for static
  RewriteRule ^/$ /index.html [QSA]

  # Rewrite to check for Rails cached page
  RewriteRule ^([^.]+)$ $1.html [QSA]

  # Deflate
  AddOutputFilterByType DEFLATE text/html text/plain text/css
  # ... text/xml application/xml application/xhtml+xml text/javascript
  BrowserMatch ^Mozilla/4 gzip-only-text/html
  BrowserMatch ^Mozilla/4.0[678] no-gzip
  BrowserMatch \\bMSIE !no-gzip !gzip-only-text/html

  ### SSL Configuration ###

  # To use this server on SSL, copy this virtual host, change it to only have the :443
  # part in the main directive and uncomment the following lines.

  #SSLEngine on
  #SSLCertificateFile /usr/share/ssl/certs/cc-wild-2006.crt
  #SSLCertificateKeyFile /usr/share/ssl/certs/cc-wild-2006.key
  #SSLCertificateChainFile /usr/share/ssl/certs/sf_issuing.crt

  # to convince Rails (via mod_proxy_balancer) that we're actually using HTTPS.
  #RequestHeader set X_FORWARDED_PROTO 'https'
</VirtualHost>